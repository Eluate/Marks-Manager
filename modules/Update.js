/*
 Class contains functions for updating data for MySQL
 */
var MySQL = require('./MySQLHandler');

var Update = function () {
  this.UpdateValues = function (socket, accountID) {
    var totalExpenses = 0;
    var totalIncome = 0;
    // Get expenses from employees
    MySQL.connection.query("SELECT * FROM employees WHERE account_id = ?", [accountID], function (err, results) {
      if (err) {
        // Do nothing if error
      }
      else if (results.length > 0) {
        results.forEach(function(result) {
          if (result.salary) {
            totalExpenses += result.salary;
          } else if (result.wage && result.hours) {
            // Hours per fortnight in a year
            totalExpenses += result.wage * result.hours * 26;
          }
        });
      }
    });
    // Get expenses and profits from sales
    MySQL.connection.query("SELECT * FROM products WHERE account_id = ?", [accountID], function (err, results) {
      if (err) {
        // Do nothing if error
      }
      else if (results.length > 0) {
        results.forEach(function (result) {
          if (result.price && result.units_sold) {
            // Total of gross income generated by sales
            totalIncome += result.price * result.units_sold;
          } else if (result.cost && result.units_sold) {
            // Total cost for getting the units * the units sold
            totalExpenses += results.cost * result.units_sold;
          }
        })
      }
    });
    // Delay by a second for mysql to retrieve results first
    setTimeout(function () {
      // Calculate net income
      var netIncome = totalIncome - totalExpenses;
      // Insert or update the mysql financial table
      MySQL.connection.query("INSERT INTO finance (account_id, expenses,gross_income,net_income) VALUES (?, ?,?,?) " +
        "ON DUPLICATE KEY UPDATE expenses = ?, gross_income = ?, net_income = ?", [accountID, totalExpenses, totalIncome, netIncome, totalExpenses, totalIncome, netIncome], function (err, results) {
        if (err) {
          // Do nothing if error
          console.log(err + err.stack);
        } else {
          // Update client
          socket.emit("uv", {});
        }
      });
    }, 1000);
  }
};

module.exports = Update;